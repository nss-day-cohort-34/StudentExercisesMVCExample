@model IEnumerable<StudentExercisesMVC.Models.Cohort>

@{
    ViewData["Title"] = "StudentExerciseReport";
}

<h1>Student Exercise Report</h1>

<div class="row">
    <label for="cohort-select">Cohort</label>
    <select id="cohort-select">
        <option>Select a Cohort...</option>
        @foreach(var cohort in Model)
        {
            <option value="@cohort.Id">@cohort.Name</option>
        }
    </select>
</div>
<div class="row">
    <canvas id="output"></canvas>
</div>

@section scripts {
<script src="~/lib/chart.js/dist/Chart.bundle.min.js"></script>
<script src="~/js/report.js"></script>
<script>
    const cohortSelect = document.getElementById('cohort-select');
    const output = document.getElementById('output').getContext('2d');
    let chart = null;

    cohortSelect.addEventListener("change", (evt) => {
        if (chart) {
            chart.destroy();
        }

        ReportManager
            .getStudentsInCohort(evt.target.value)
            .then(students => {
                chart = new Chart(output, {
                    type: 'bar',
                    data: {
                        labels: students.map(s => `${s.firstName} ${s.lastName}`),
                        datasets: [{
                            label: "Exercise Count",
                            data: students.map(s => s.exerciseCount)
                        }]
                    }
                });
            });
    });
</script>
}
